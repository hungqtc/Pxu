package controller;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.MultipartConfig;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.Part;

import model.bean.Category;
import model.bean.Song;
import model.dao.CategoryDAO;
import model.dao.SongDAO;
import utils.AuthUtil;
import utils.CodeMessageUtil;
import utils.DefineUtil;
import utils.FileUtil;
@MultipartConfig

public class AdminEditSongController extends HttpServlet {
	private static final long serialVersionUID = 1L;

	public AdminEditSongController() {
		super();
	}

	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		if (!AuthUtil.isLogin(request)) {
			response.sendRedirect(request.getContextPath()+"/auth/login");
			return;
		}
		 SongDAO songDAO = new SongDAO();
		int id = Integer.parseInt(request.getParameter("id"));
		Song objSong = songDAO.getItem(id);
		
		if (objSong == null ) {
			response.sendRedirect(request.getContextPath()+"/admin/song/index?msg="+CodeMessageUtil.ERROR_NO_ID);
			return;
		}
		
		//lay danh sach cac danh muc
		CategoryDAO catDAO = new CategoryDAO();
		ArrayList<Category> listCat = catDAO.getItems();
		request.setAttribute("listCat", listCat);
		request.setAttribute("objSong", objSong);
		
		RequestDispatcher rd = request.getRequestDispatcher("/views/admin/song/edit.jsp");
		rd.forward(request, response);
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		request.setCharacterEncoding("UTF-8");
		
		CategoryDAO catDAO = new CategoryDAO();
		
		
		int catId = Integer.parseInt(request.getParameter("category"));
		int id = Integer.parseInt(request.getParameter("id"));
		String name = request.getParameter("name");
		String description = request.getParameter("preview");
		String detail = request.getParameter("detail");
		
		
		//get old data
		 SongDAO songDAO = new SongDAO();
		 Song song = songDAO.getItem(id);
			
			if (song == null ) {
				response.sendRedirect(request.getContextPath()+"/admin/song/index?msg="+CodeMessageUtil.ERROR_NO_ID);
				return;
			}
			Part part = request.getPart("picture");
			
			//Tao thu muc luu anh 
			String dirPath = request.getServletContext().getRealPath("")  + DefineUtil.DIR_UPLOAD;
			File dir = new File(dirPath);
			if (!dir.exists()) {
				dir.mkdirs();	
			} 
			
			//Lay ten file tu part
			String picture = FileUtil.getName(part);
			String fileName = "";
			if (picture.isEmpty()) {
				fileName = song.getPicture();
			} else {
				fileName = FileUtil.rename(picture);
			}
									 
			//check upload file
			if (!"".equals(fileName)) {
				
				
				
			/*
			 * //Delete old file String oldfilePath = dirPath + File.separator +
			 * song.getPicture(); File oldFile = new File(oldfilePath); if
			 * (oldFile.exists()) { oldFile.delete(); }
			 */
				String filePath = dirPath + File.separator + fileName;
				part.write(filePath);
			} 
		
		
		Song objSong = new Song(id, name, description, detail, null, fileName, 0, new Category(catId, null));
		
		//validation
		
		
		
		 
		if (songDAO.editItem(objSong) > 0) {
			//thanh cong

			response.sendRedirect(request.getContextPath()+"/admin/song/index?msg="+CodeMessageUtil.EDIT_SUCCESS);
			return;
		} else {
			response.sendRedirect(request.getContextPath()+"/admin/song/edit?msg="+CodeMessageUtil.ERROR);
			return;
		}
		
	}

}
